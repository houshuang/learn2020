{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/pomodoro","result":{"data":{"brainNote":{"slug":"pomodoro","title":"pomodoro","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a pomodoro or #pom for short is the fundamental #timebox unit of all #Learn2020 experiences\", mdx(\"span\", {\n    id: \"Ux06e7USd\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is 25 minutes on, 5 minutes off\", mdx(\"span\", {\n    id: \"03beOJWUI\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is high-intensity focus for 25 minutes, with a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"force\"), \"d 5 minute break where the learner switches off completely, moves around, has a break, makes a coffee etc.\", mdx(\"span\", {\n    id: \"CbLWfpIuz\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"see\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Pomodoro_Technique\"\n  }), \"https://en.wikipedia.org/wiki/Pomodoro_Technique\"), \" for more details\", mdx(\"span\", {\n    id: \"UX--YYOKJ\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"timebox","slug":"timebox","childMdx":{"excerpt":"a timebox is a learning unit of time in  [[The CASSIDY Method]] A timebox is simply a limited set of time to accomplish a result. Think ofâ€¦"}}],"outboundReferenceNotes":null}},"pageContext":{"slug":"pomodoro"}}}