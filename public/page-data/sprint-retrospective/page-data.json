{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/sprint-retrospective","result":{"data":{"brainNote":{"slug":"sprint-retrospective","title":"Sprint Retrospective","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is when we as a team go over what went well, what we learnt, and how might we do things differently next time:\", mdx(\"span\", {\n    id: \"tyi3dwltb\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We use the format that \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/agile-results\"\n  }), \"[[Agile Results]]\"), \" uses for its weekly review\", mdx(\"span\", {\n    id: \"SY_JKnXeB\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 things that went well\", mdx(\"span\", {\n    id: \"3iUpwXXH6\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 things to learn from\", mdx(\"span\", {\n    id: \"XYf9QR1sb\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and that's it\", mdx(\"span\", {\n    id: \"EAMOlAf4e\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Learn2020 Glossary","slug":"learn2020-glossary","childMdx":{"excerpt":"A-Z of Terms Used in  [[Learn2020]]  Literature Day 1  [[UNPACK the UNCERTAINTY]] Day 2  [[FIGURE OUT the FACTS]] Day 3  [[ASSIMILATE the…"}},{"title":"TEST for TRUTH","slug":"test-for-truth","childMdx":{"excerpt":"[[The Learning Sprint]]  Day 5 Overview of Day 5: Test for Truth Key Objectives PROVE IT! We bring it all together and teach students how to…"}},{"title":"The Learning Sprint Glossary","slug":"the-learning-sprint-glossary","childMdx":{"excerpt":"A-Z of Terms referenced in  [[The Learning Sprint]] Day 1  [[UNPACK the UNCERTAINTY]] Day 2  [[FIGURE OUT the FACTS]] Day 3  [[ASSIMILATE…"}}],"outboundReferenceNotes":[{"title":"Agile Results","slug":"agile-results","childMdx":{"excerpt":"Source:  http://jdmeier.com/agile-results-on-a-page/ Agile Results on a Page By  JD Meier  January 16, 2019 Agile Results is a simple system…"}}]}},"pageContext":{"slug":"sprint-retrospective"}}}