{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/task-switching-overhead","result":{"data":{"brainNote":{"slug":"task-switching-overhead","title":"Task Switching Overhead","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The idea that every time you switch cognitive tasks, it takes some time to transition from what you were learning to what you are now studying.\", mdx(\"span\", {\n    id: \"jG8RVYXoy\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Therefore it follows that it's difficult to get deep into a subject if you keep switching contexts every 40 mins or so.\", mdx(\"span\", {\n    id: \"Q0jfA1kd2\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The idea of getting deep into a subject in is expounded by Cal Newport in his 2012 blog post \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/deep-work\"\n  }), \"[[Deep Work]]\"), mdx(\"span\", {\n    id: \"EgTA0cY6a\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A reasonable summary from wrike.com\", mdx(\"span\", {\n    id: \"GsCy8OqqU\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.wrike.com/blog/high-cost-of-multitasking-for-productivity/\"\n  }), \"https://www.wrike.com/blog/high-cost-of-multitasking-for-productivity/\"), mdx(\"span\", {\n    id: \"dFcRvYiwn\"\n  }))))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Learn2020 Glossary","slug":"learn2020-glossary","childMdx":{"excerpt":"A-Z of Terms Used in  [[Learn2020]]  Literature Day 1  [[UNPACK the UNCERTAINTY]] Day 2  [[FIGURE OUT the FACTS]] Day 3  [[ASSIMILATE the…"}}],"outboundReferenceNotes":[{"title":"Deep Work","slug":"deep-work","childMdx":{"excerpt":"Deep Work is an idea populated by Cal Newport  - computer science professor at Georgetown University in the US http://people.cs.georgetown…"}}]}},"pageContext":{"slug":"task-switching-overhead"}}}